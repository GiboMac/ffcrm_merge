- contact_attributes = pretty_merge_attributes(@contact)
- master_attributes  = pretty_merge_attributes(@master_contact)
- default_merge = calculate_default_merge(contact_attributes, master_attributes)

.remote
  - remote_form_for(@contact, :url => merge_contact_path(@contact.id, @master_contact.id), :html => one_submit_only(:contact)) do |f|
    = link_to_close edit_contact_path(@contact)
    = f.error_messages
    .subtitle{ :style => "width:95%; padding:3px;" }
      = t(:merge_into_info)
    .section
      #merge_into
        %table{ :cellpadding => "3px", :style => "text-align:left; border-collapse: collapse; border: none;" }
          %tr
            %th
            %th{ :valign => :top, :style => "font-size: 13px;", :width => "40%" }
              = "#{t(:duplicate_contact)}: #{@contact.name}"
            %th{ :valign => :top, :style => "font-size: 13px;", :width => "40%" }
              = "#{t(:master_contact)}: #{@master_contact.name}"
            - ordered_merge_attributes.each do |attribute|
              - contact_value, master_value = contact_attributes[attribute], master_attributes[attribute]
              - unless contact_value.blank? and master_value.blank?
                %tr{ :style => "border-bottom:1px dotted silver;"}
                  %th{ :width => "20%" }
                    .label #{attribute.humanize}
                  %td
                    = ignore_merge_radio_button("no",  attribute, default_merge[attribute]) unless contact_value.blank?
                    .label{:style => "display: inline;"} #{contact_value}
                  %td
                    = ignore_merge_radio_button("yes", attribute, default_merge[attribute]) unless master_value.blank?
                    .label{:style => "display: inline;"} #{master_value}

    .buttonbar
      = f.submit t(:merge_contacts), :onclick => "var check=confirm('#{t('confirm_merge')}'); if(!check){return false;};"
      #{t :or}
      = link_to_cancel edit_contact_path(@contact)

