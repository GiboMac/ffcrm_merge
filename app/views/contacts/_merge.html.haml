- # If we are reversing the merge, we still create a form for the
- # duplicate contact, but pass in the hidden 'reverse_merge' param.
- reverse_merge        = params[:reverse_merge] == "true" ? true : false

- c = [@contact, @master_contact]
- duplicate, master    = reverse_merge ? c.reverse : c

- duplicate_attributes = pretty_merge_attributes(duplicate)
- master_attributes    = pretty_merge_attributes(master)
- default_merge        = calculate_default_merge(duplicate_attributes, master_attributes)

.remote
  - remote_form_for(@contact, :url => merge_contact_path(@contact.id, @master_contact.id), :html => one_submit_only(:contact)) do |f|
    = link_to_close edit_contact_path(@contact)
    = f.error_messages
    = hidden_field_tag(:reverse_merge, reverse_merge)
    .subtitle{ :style => "width:95%; padding:3px;" }
      = t(:merge_into_info)
    .section
      #merge_into
        %table{ :cellpadding => "3px", :style => "text-align:left; border-collapse: collapse; border: none;" }
          %tr
            %th
              %small
                = link_to(t('switch_duplicate_and_master'), "#", :onclick => "crm.load_merge_form('contacts', '#{@master_contact.id}', '#{@contact.id}', #{!reverse_merge});")
            %th{ :valign => :top, :style => "font-size: 13px;", :width => "40%" }
              = "#{t(:duplicate_contact)}: #{duplicate.name}"
            %th{ :valign => :top, :style => "font-size: 13px;", :width => "40%" }
              = "#{t(:master_contact)}: #{master.name}"
            - ordered_merge_attributes.each do |attribute|
              - duplicate_value, master_value = duplicate_attributes[attribute], master_attributes[attribute]
              - unless duplicate_value.blank? and master_value.blank?
                %tr{ :style => "border-bottom:1px dotted silver;"}
                  %th{ :width => "20%" }
                    .label #{attribute.humanize}
                  %td
                    = ignore_merge_radio_button("no",  attribute, default_merge[attribute]) unless duplicate_value.blank?
                    .label{:style => "display: inline;"} #{duplicate_value}
                  %td
                    = ignore_merge_radio_button("yes", attribute, default_merge[attribute]) unless master_value.blank?
                    .label{:style => "display: inline;"} #{master_value}

    .buttonbar
      = f.submit t(:merge_contacts), :onclick => "var check=confirm('#{t('confirm_merge')}'); if(!check){return false;};"
      #{t :or}
      = link_to_cancel edit_contact_path(@contact)

